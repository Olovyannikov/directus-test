# This file was generated. Do not edit manually.

schema {
    query: Query
    subscription: Subscription
}

type Query {
    posts(filter: posts_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts!]!
    posts_aggregated(filter: posts_filter, groupBy: [String], limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts_aggregated!]!
    posts_by_id(id: ID!): posts
    posts_by_version(id: ID!, version: String!): version_posts
}

type Subscription {
    posts_mutated(event: EventEnum): posts_mutated
}

type datetime_functions {
    day: Int
    hour: Int
    minute: Int
    month: Int
    second: Int
    week: Int
    weekday: Int
    year: Int
}

type posts {
    body: String
    date_created: Date
    date_created_func: datetime_functions
    date_updated: Date
    date_updated_func: datetime_functions
    featured_image: String
    id: ID!
    slug: String
    sort: Int
    status: String
    title: String
    user_created: String
    user_updated: String
}

type posts_aggregated {
    avg: posts_aggregated_fields
    avgDistinct: posts_aggregated_fields
    count: posts_aggregated_count
    countAll: Int
    countDistinct: posts_aggregated_count
    group: JSON
    max: posts_aggregated_fields
    min: posts_aggregated_fields
    sum: posts_aggregated_fields
    sumDistinct: posts_aggregated_fields
}

type posts_aggregated_count {
    body: Int
    date_created: Int
    date_updated: Int
    featured_image: Int
    id: Int
    slug: Int
    sort: Int
    status: Int
    title: Int
    user_created: Int
    user_updated: Int
}

type posts_aggregated_fields {
    id: Float
    sort: Float
}

type posts_mutated {
    data: posts
    event: EventEnum
    key: ID!
}

type version_posts {
    body: String
    date_created: Date
    date_created_func: datetime_functions
    date_updated: Date
    date_updated_func: datetime_functions
    featured_image: String
    id: ID!
    slug: String
    sort: Int
    status: String
    title: String
    user_created: String
    user_updated: String
}

enum EventEnum {
    create
    delete
    update
}

"ISO8601 Date values"
scalar Date

"A Float or a String"
scalar GraphQLStringOrFloat

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

input date_filter_operators {
    _between: [GraphQLStringOrFloat]
    _eq: String
    _gt: String
    _gte: String
    _in: [String]
    _lt: String
    _lte: String
    _nbetween: [GraphQLStringOrFloat]
    _neq: String
    _nin: [String]
    _nnull: Boolean
    _null: Boolean
}

input datetime_function_filter_operators {
    day: number_filter_operators
    hour: number_filter_operators
    minute: number_filter_operators
    month: number_filter_operators
    second: number_filter_operators
    week: number_filter_operators
    weekday: number_filter_operators
    year: number_filter_operators
}

input number_filter_operators {
    _between: [GraphQLStringOrFloat]
    _eq: GraphQLStringOrFloat
    _gt: GraphQLStringOrFloat
    _gte: GraphQLStringOrFloat
    _in: [GraphQLStringOrFloat]
    _lt: GraphQLStringOrFloat
    _lte: GraphQLStringOrFloat
    _nbetween: [GraphQLStringOrFloat]
    _neq: GraphQLStringOrFloat
    _nin: [GraphQLStringOrFloat]
    _nnull: Boolean
    _null: Boolean
}

input posts_filter {
    _and: [posts_filter]
    _or: [posts_filter]
    body: string_filter_operators
    date_created: date_filter_operators
    date_created_func: datetime_function_filter_operators
    date_updated: date_filter_operators
    date_updated_func: datetime_function_filter_operators
    featured_image: string_filter_operators
    id: number_filter_operators
    slug: string_filter_operators
    sort: number_filter_operators
    status: string_filter_operators
    title: string_filter_operators
    user_created: string_filter_operators
    user_updated: string_filter_operators
}

input string_filter_operators {
    _contains: String
    _empty: Boolean
    _ends_with: String
    _eq: String
    _icontains: String
    _iends_with: String
    _in: [String]
    _istarts_with: String
    _ncontains: String
    _nempty: Boolean
    _nends_with: String
    _neq: String
    _niends_with: String
    _nin: [String]
    _nistarts_with: String
    _nnull: Boolean
    _nstarts_with: String
    _null: Boolean
    _starts_with: String
}
